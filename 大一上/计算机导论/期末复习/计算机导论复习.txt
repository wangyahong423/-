计算机导论

计算机引子
  数值计算 逻辑计算 存储记忆功能
  组成：硬件系统和软件系统

第一章 计算机概述
    计算机的发展历史
    计算机的分类
    计算机系统组成
      软件系统：系统软件，应用软件
      硬件系统
        宏观上两大部件：主机和外设
        微观上五大部分：运算器、控制器、存储器、输入设备、输出设备

   输入设备、输出设备（以主机为参照物）
   存储器
     内存和外存
        内存以字节为基本存储单位，一般以字节编址
          实际使用时，可能以若干字节为一个逻辑单位
        内存反复利用（用新内容覆盖旧内容）
        内存容量 K/M/G（/T）
     RAM和ROM
   运算器：算术运算和逻辑运算 ALU
   控制器：指挥中心

冯诺依曼计算机
  （1）五大部件
  （2）二进制表示数据和指令
  （3）存储程序的思想（最核心）

计算机性能指标
  机器字长
  数据通路宽度
  主存容量（1，字节；2，字数*字长）
  运算速度

计算机的应用领域
   计算机不可能取代人类
计算机发展方向
   大数据：4v，注重的是价值，能力
   云计算

第二章 计算机中的数据
二进制基本概念：基本符号、位权、基、后缀B
二进制的基本运算：
  逻辑与：（逻辑乘）
    串联电路来说明 AB全1则1，有0则0
    计算机逻辑：0表示假 1表示真
    ABC作为输入，会求解（结合律）

  逻辑或（逻辑加）
    并联电路来说明
    A+B  有1则1，全0则0

  逻辑非：取反

硬件实现：逻辑符号（与门、或门、非门）

应用（二四译码器）2个输入端同时给信号，4个输出端有且只有一个生效（s使能端）
  读懂（ppt），会设计（板书），体会内存字节问题

其他进制
  八进制、十六进制
  基本符号，位权，基

不同进制之间的转换
  R进制转换成十进制：按位权展开求和
  十进制转换成R进制：
    整数部分：除R取余、倒取余数
    小数部分：乘R取整，正取整数
  二进制和八进制相互转换：
    三位一组
  二进制和十六进制相互转换：
    四位一组

  十六进制和八进制相互转换：
    二进制为桥梁（十进制为桥梁也可以）

有符号整数在计算机内的存储
原码
反码
补码
存储空间（课上用的8位存储空间，如果n位同理）

-33
 原码1010 0001
 反码1101 1110
 补码1101 1111
-56
 原码1011 1000
 反码1100 0111
 补码1100 1000
40
 原码0010 1000
 反码0010 1000
 补码0010 1000

计算机采用补码形式

第三章 计算机编程（一、三、四章部分内容） 
计算机程序：为解决某一问题而设计的一系列指令，能被计算机识别和执行
（程序和软件的关系）
程序设计语言：
  机器语言：二进制
  汇编语言：助记符（面向机器、低级）
  高级语言

编程效率高的语言――高级语言
执行效率高的语言――机器语言

计算机语言层次
  高级语言写的程序最终要转换成机器语言才能被识别和执行

高级语言――汇编语言――机器语言
高级语言――机器语言

语言处理程序（编译系统、编译器）
  实现从高级语言到机器语言“翻译”的过程
  编译：产生目标代码.obj(C语言)
  解释：解释一句执行一句，不产生中间目标代码（Python） 

小实例体会

初窥高级语言 
词法：规则，注意关键词（if for...）
语法:
 表达式语句
   算术表达式
   布尔表达式
 函数调用语句
 控制语句
   顺序结构
   分支结构（选择结构）if..else..
   循环结构while(for)
     减少源程序重复书写的工作量，最能发挥计算机的特长

安装
使用方法
  交互式：IDLE 一次性的验证
  脚本方式：代码多行 逻辑鲜明 方便保存

  推荐：脚本方式
  IDLE-FILE-NEW FILE
  保存成.py文件，F5执行

初识Python
  遵循高级语言的通用特点（数据类型、表达式语句、控制语句等等）
  独特的语法特点
    用缩进体现逻辑（建议使用tab键）
    写程序的过程中，注意细节（冒号等用半角英文状态书写，#表示注释）

Python的数据类型
  数值类型
    整型：运算符（操作符）
    浮点型（同理）注意标准和实现的关系
    随机数类型（产生浮点数、整数）
       记住语句（在实践基础上）

  布尔类型
     6种比较运算符
     3种逻辑运算符

解决问题
  判断x是不是偶数 x%2==0

列表
  序列：顺序编号，包括列表、元组、字符串
  列表：序列的一种，每一个元素类型可以不相同
  数组：数组是列表的一种特殊情况，所有的数据元素类型相同

[]――列表
[1,3.5,"Hello"]是个列表
L=[1,2,3,4] L是列表类型的变量

序列的通用操作
  （1）索引:L[3]取值;L[0]="Hello"赋值
  （2）分片： L[index1:index2:stride]
  （3）加:L+[3]
  （4）乘:L*100
  （5）in（not in）: 3 in L
序列通用函数
   len():len(L)
   min()
   max()
   sum()

列表的专用方法(专有方法)
  L.append(x)
  记住专有方法对应的函数名和参数意义
  
P131练习题4.2.6

字符串
  形式“”或者‘’
  转义
  部分应用：input（）函数
          类型转化int（）float（）
赋值语句
  形式（; * +=等等）
  特别：注意列表类型在个别赋值方式下的特点（增强赋值、多目标赋值）

控制语句
  缩进体现python的逻辑
  if 格式
    条件表达式（6种比较运算符、3种逻辑运算符构成布尔表达式）
    根据实际需要有选择使用elif和else
    分支中可以继续再嵌套

  实战
    算法：解决问题的步骤
    工具：高级语言Python

循环结构
  while语句
关键词 while必须有，判断条件
注意：循环变量一般在循环体内要修改，否则会死循环
continue、break、else的用法

  for语句
关键词for,else,continue,break
for 结合列表，结合range（）
  range（）一个参数、两个参数、三个参数
  for循环和while循环可以等价互换
  for循环可以进一步再嵌套（分支、循环）

python的函数
函数是程序的一部分 函数一般会对应一个功能

函数定义
  def关键词
  函数名
  形式参数
  可以有return

函数调用
  一定在函数定义之后才能进行
  函数名严格一致
  给定实际参数
  有return和无return的函数在调用时的区别

  后调用的先返回（用栈实现）

列举高级语言
  高级语言 有多种
算法【在有限步骤内，为解决某一问题而使用的一组定义明确的规则。与编程无关，独立于编程语言之外，是编程的第一步】
  定义 与程序有什么异同【程序；为解决某一问题而设计的一系列指令，能被计算机识别和执行】
  算法的五个特征【有穷性、确切性、具有输入项、输出项、可行性】
  算法的描述方式
    【流程图、伪代码、自然语言】
  解决同一问题，可能有不同的算法，算法有优劣之分


第四章 程序设计导引
程序设计的四个步骤
  1 分析问题
  2 设计算法
  3 编码
  4 调试程序

简单程序：已有数学模型，某一种编程语言
复杂程序：例如学籍系统，找某个学生

基本的数据结构（数据之间有关系）
  线性关系（线性表：最简单且最常用的数据结构）
    逻辑结构：4个唯一【①存在唯一一个被称作“第一个”的数据元素；②存在唯一一个被称作“最后一个”的数据元素；
                       ③除第一个之外其他数据元素有且只有一个前驱；④除最后一个之外其他数据元素有且只有一个后继】
    物理结构：在内存中存储
       数组：连续的内存空间 用内存的位置关系体现逻辑关系
       运算：
           遍历：每个元素均被访问一次并且只被访问一次（不漏不重复）
           插入：考虑插入位置是否合法
                 考虑当前数组空间是否够用
                 挪动位置（注意从最后一个位置开始依次向后挪动；在最后一个位置插入无需挪动）
                 插入，对应位置元素赋值
                 长度加1

          删除：考虑删除位置是否合法
                挪动位置（如果在最后一个合法位置上删除，则无需挪动；否则，从最后一个元素开始，一次向后挪动一个位置）
                长度减1
优点“随机存取”【查找很方便，查找第2个和第200个方法一样】
缺点：插入、删除不方便

链表：空间位置任意 每个结点由数据和下一个元素所在结点的位置构成

头结点（数据域不放数值，指针域存放第一个元素所在结点的位置）

头结点不是必须有，如果没有头结点，头指针存在于第一个元素所在结点的内存位置

运算
  遍历：顺序指针
  插入：判断插入位置是否合法，找到插入位置的前一个结点，在内存空间中分得一块空间，将待插入的值赋值给数据域，然后修改指针域（先改新结点的指针域，，再改原链表对应的结点的指针域）
  删除：修改指针，跳过待删除结点

优点：插入和删除方便
缺点：指针域占用额外的内存空间，查找麻烦

栈：插入和删除操作受限的线性表【限定在表尾进行插入和删除操作】
    后进先出
例如入栈顺序是a1,a2,a3则可能的出栈顺序是：
  a3,a2,a1
  a1,a2,a3
  a2,a1,a3
  a1,a3,a2
  a2,a3,a1
  a3,a1,a2不可能
 
队列
  插入和删除受限的线性表（队尾插入、队头删除）
  先进先出
    
树形关系
  根、叶子、二叉树（n层二叉树最多(2^n-1)个结点――n层满二叉树）
  应用场景：族谱、行政管理

图形关系
  应用场景：最短路径、最小生成树问题等等

程序设计方法
研究问题“自上而下”
模块化思想
实现程序“自下而上”

面向过程：在设计之初就有了深入、彻底的认知【将解决问题的步骤写出来，然后一步步执行就能得到结果】
面向对象：OO，符合人类认知客观世界的规律，可以逐步深入【方法的出发点和基本原则，是尽可能的满足现实世界中人类的思维方式，使开发软件的方法和过程尽可能地接近人类解决问题的方法和过程】

对象是一个具体的实例，有自己的自然属性和行为属性
类是多个相似对象共同特性的抽象描述【抽象：是人类认识问题的基本手段之一，是选择性忽略，抽象的过程，就是人类对问题进行分析和认识的过程】

OO的三个特征
 封装、继承、多态
 
软件生命周期
软件工程

一种模式：瀑布模型
定义阶段
  计划
  需求分析
开发阶段
  设计
  编码
  测试（不可能100%的）
维护阶段
  运行、维护
瀑布模型的优缺点
   优点：为项目提供了按阶段划分的检查点；当前一阶段完成后，您只需要去关注后续阶段
   缺点：在各个阶段之间很少有反馈；在项目生命后期才能看见结果；使用过多的强制强制完成日期和里程碑来追踪各个阶段；不适应用户需求的变化，对软件的开发影响很大

了解其他几种模型 【RUP、Scrum、ICONIX】

第五章 操作系统
操作系统在计算机系统中的地位
了解计算机启动的过程【启动自检阶段、初始化启动阶段、启动加载阶段、内核装载阶段、登录阶段】

操作系统的定义ppt【是控制和处理计算机系统内各种硬件和软件资源、合理有效地组织计算机系统的工作，为用户提供一个使用方便可扩展的工作环境，从而起到连接计算机和用户的接口作用】

操作系统的分类
  批处理操作系统
  分时操作系统
  实时操作系统（硬实时、软实时）
  嵌入式操作系统

操作系统对硬件的管理――CPU
  进程的定义（进程是指在多道程序设计的环境下，为了描述进程在计算机系统中的执行情况所提出的新的概念）
  分时间片（不能太长、不能太短）
  进程的三种基本状态
    就绪态（进程已经获得除CPU之外所有的必需资源，一旦获得CPU控制权，就可执行）
    执行态（进程已经获得执行所必需的所有资源，正在处理机上执行）
    阻塞态（正在执行的进程由于受到某事件而暂时无法运行时，便放弃处理机而处于停止状态，称其处于阻塞状态或者等待状态）
  状态之间的转换（阻塞状态不能转换为执行状态）
进程调度（按照调度策略，动态地把CPU分配给处于就绪状态队列中的进程，使该进程从就绪状态转换为执行状态）
  
  FCFS（先来先服务调度算法）
    优点：公平、容易实现、适合长作业
    缺点：不利于短作业、平均周转时间长
  SJF（段作业优先调度算法）
    优点：有利于短作业，平均周转时间短
    缺点：对长作业不利，需要事先知道每个进程的执行时间，不能处理紧急进程，长作业进程会出现饥饿状态

周转时间和平均周转时间计算（例子）
  会按某种调度策略求出执行的先后顺序
  会计算周转时间和平均周转时间
  注意：时间片考虑与否
        进程调度的时机

第六章 网络和物联网
计算机网络的功能
 连通性
 共享：信息（数据）、软件、硬件

物理上连接网络――五层模型
 计算机网络体系结构：分层 协议
 OSI七层
 TCP/IP四层
 五层模型
   5应用层  应用进程
   4运输层  进程到进程（UDP、TCP）
   3网络层  主机到主机（IP）
   2数据链路层 相邻结点 
   1物理层  比特信息的正确表示

细数五层模型
  1.信道复用
  2.封装成帧、透明传输、差错检测
  3.网络层
  IP地址：32位，点分十进制
  会判断合法的IP地址（0~255）
     主机位为全0的IP地址合法，但是表示网络，而不分配给主机或路由器接口
     网络位+主机位
     子网掩码：网络位对应为1，主机位对应为0，例如255.0.0.0和255.128.0.0

经典应用
 DHCP能够动态分配IP地址，如果服务器不工作，可以手动设置合法的IP地址

路由表
  目标网络（地址和子网掩码）
  下一跳 
   4.传输层：三次握手
   5.应用层：DNS，域名树，域名解析过程
web
  网页文件
  URL
  访问网页的过程
  静态网页、动态网页
  网页开发语言

物联网

office2016
1.word
 
2.Excel
 
3.PowerPoint









    











